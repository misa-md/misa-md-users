{"version":3,"sources":["IssueForm.module.scss","NewUserIntro.module.scss","en-US.ts","zh-CN.ts","LocaleContext.ts","I18n.tsx","NewUserIntro.tsx","NewUsersForm.tsx","api.ts","programs.ts","PreviewModal.tsx","IssueForm.tsx","createPreview.ts","hooks/useVersions.ts","App.tsx","index.tsx","App.module.scss"],"names":["module","exports","enMessages","require","window","appLocale","en","messages","locale","data","appLocaleData","zhMessages","zh","LocaleContext","createContextIO","cache","localStorage","getItem","navigator","language","toLowerCase","getLocale","texts","newUserEmailHelp","newUserIntro","newUserApplyFiledHelp","I18n","id","restProps","React","Text","Intro","introRef","className","styles","intro","ref","FormItem","Form","Item","TextArea","Input","FeatureForm","name","label","defaultMessage","rules","required","initialValue","disabled","help","type","message","autoSize","minRows","compareVersions","checkStatus","response","status","Error","statusText","fetchVersions","repo","fetch","then","json","releases","filter","r","prerelease","map","tag_name","versions","normalVersions","nextVersions","forEach","version","match","includes","push","sort","a","b","orderVersions","catch","err","console","warn","Programs","enabled","display","users_repo","md","Remarkable","PreviewModal","visible","content","onCancel","onCreate","title","cancelText","width","footer","onClick","dangerouslySetInnerHTML","__html","render","Option","Select","params","location","search","slice","split","reduce","acc","param","key","value","IssueForm","props","useForm","form","getContent","issueType","values","getFieldsValue","repos","new_user_org","new_user_name","new_user_email","new_user_areas_of_interest","new_user_apply_field","createNewUser","setContent","preview","setPreview","triggerPreview","newPreview","getFieldValue","formRef","repoVersions","api","useVersions","bindModalHandler","current","addEventListener","e","target","getAttribute","preventDefault","restoreValues","omitFields","JSON","parse","keys","Object","setFieldsValue","setTimeout","currentValues","handleTypeChange","onIssueTypeChanged","handleCreate","encodeURIComponent","replace","withConfirm","withMarker","body","clear","open","layout","size","initialValues","onFinish","onValuesChange","_","preForm","cacheForm","setItem","stringify","org","span","mode","meta","offset","Group","onChange","radioGroup","Button","noStyle","shouldUpdate","prev","next","showIcon","NewUsersForm","submitBtn","htmlType","icon","BugOutlined","Header","Layout","Content","Footer","App","localeString","forceUpdateLocale","addLocaleData","useState","setIssueType","Provider","header","headerContainer","logo","alt","src","read","log","write","switchLocale","NewUserIntro","style","textAlign","href","rel","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8855fffb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"submitBtn\":\"IssueForm_submitBtn__2i6iD\",\"radioGroup\":\"IssueForm_radioGroup__3pcx2\",\"similar\":\"IssueForm_similar__32aVZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"NewUserIntro_intro__lEX0K\"};","import * as appLocaleData from \"react-intl/locale-data/en\";\n\nconst enMessages: any = require(\"./locales/en.json\");\n\n(window as any).appLocale.en = {\n  messages: {\n    ...enMessages,\n  },\n  locale: \"en-US\",\n  data: appLocaleData,\n};\n","import * as appLocaleData from \"react-intl/locale-data/zh\";\n\nconst zhMessages: any = require(\"./locales/zh.json\");\n\n(window as any).appLocale.zh = {\n  messages: {\n    ...zhMessages,\n  },\n  locale: \"zh-CN\",\n  data: appLocaleData,\n};\n","import { createContextIO } from \"react-context-io\";\n\nfunction getLocale() {\n  const cache = window.localStorage.getItem(\"locale\");\n  if (cache) {\n    return cache;\n  }\n  return window.navigator.language.toLowerCase() === \"zh-cn\" ? \"zh\" : \"en\";\n}\n\nconst LocaleContext = createContextIO<string>(getLocale());\n\nexport function switchLocale(forceUpdateLocale: any) {\n  const locale = LocaleContext.read() === \"en\" ? \"zh\" : \"en\";\n  forceUpdateLocale(locale);\n  console.log(locale);\n  LocaleContext.write(locale);\n  window.localStorage.setItem(\"locale\", locale);\n}\n\nexport default LocaleContext;\n","import * as React from \"react\";\nimport { importMDX } from \"mdx.macro\";\nimport LocaleContext from \"./LocaleContext\";\n\nconst texts: any = {\n  en: {\n    newUserEmailHelp: importMDX.sync(\"./locales/en/newUserEmail.md\"),\n    newUserIntro: importMDX.sync(\"./locales/en/newUserIntro.md\"),\n    newUserApplyFiledHelp: importMDX.sync(\n      \"./locales/en/newUserApplyFiledHelp.md\"\n    ),\n  },\n  zh: {\n    newUserEmailHelp: importMDX.sync(\"./locales/zh/newUserEmail.md\"),\n    newUserIntro: importMDX.sync(\"./locales/zh/newUserIntro.md\"),\n    newUserApplyFiledHelp: importMDX.sync(\n      \"./locales/zh/newUserApplyFiledHelp.md\"\n    ),\n  },\n};\n\nexport interface Props {\n  id: string;\n  [name: string]: any;\n}\n\nconst I18n: React.FC<Props> = ({ id, ...restProps }) => {\n  const locale = React.useContext(LocaleContext);\n  const Text = texts[locale][id];\n\n  return (\n    <div {...restProps}>\n      <Text />\n    </div>\n  );\n};\n\nexport default I18n;\n","import * as React from \"react\";\nimport I18n from \"./I18n\";\nimport styles from \"./NewUserIntro.module.scss\";\n\nconst Intro: React.FC = () => {\n  const introRef = React.useRef<null | HTMLDivElement>(null);\n\n  return (\n    <div className={`${styles.intro} paragraph`} ref={introRef}>\n      <I18n id=\"newUserIntro\" />\n    </div>\n  );\n};\n\nexport default Intro;\n","import * as React from \"react\";\nimport { Form, Input } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport I18n from \"./I18n\";\n\nconst FormItem = Form.Item;\nconst { TextArea } = Input;\n\nconst FeatureForm: React.FC<{}> = () => (\n  <div>\n    <Form.Item\n      name=\"title\"\n      label={<FormattedMessage id=\"issue.title\" defaultMessage=\"title\" />}\n      rules={[{ required: true }]}\n      initialValue={\"New User\"}\n    >\n      <Input disabled />\n    </Form.Item>\n    <Form.Item\n      name=\"new_user_name\"\n      label={\n        <FormattedMessage\n          id=\"issue.new_user.name_or_orcid\"\n          defaultMessage=\"Your preferred name or ORCID\"\n        />\n      }\n      rules={[{ required: true }]}\n    >\n      <Input />\n    </Form.Item>\n    <Form.Item\n      name=\"new_user_email\"\n      label={\n        <FormattedMessage\n          id=\"issue.new_user.contact_email\"\n          defaultMessage=\"Your contact email\"\n        />\n      }\n      help={<I18n id=\"newUserEmailHelp\" />}\n      rules={[\n        {\n          required: true,\n          type: \"email\",\n          message: \"The input is not valid E-mail!\",\n        },\n      ]}\n    >\n      <Input />\n    </Form.Item>\n    <Form.Item\n      name=\"new_user_org\"\n      label={\n        <FormattedMessage\n          id=\"issue.new_user.org\"\n          defaultMessage=\"Your institutions/organizations\"\n        />\n      }\n      rules={[{ required: true }]}\n    >\n      <Input />\n    </Form.Item>\n    <Form.Item\n      name=\"new_user_areas_of_interest\"\n      label={\n        <FormattedMessage\n          id=\"issue.new_user.areas_of_interest\"\n          defaultMessage=\"Your areas of interest or expertise\"\n        />\n      }\n      rules={[{ required: true }]}\n    >\n      <Input />\n    </Form.Item>\n    <FormItem\n      name=\"new_user_apply_field\"\n      rules={[{ required: true }]}\n      help={<I18n id=\"newUserApplyFiledHelp\" />}\n      label={\n        <FormattedMessage\n          id=\"issue.new_user.apply_field\"\n          defaultMessage=\"Which filed(s) will you apply this program to ?\"\n        />\n      }\n    >\n      <TextArea autoSize={{ minRows: 2 }} />\n    </FormItem>\n  </div>\n);\n\nexport default FeatureForm;\n","const compareVersions: any = require(\"compare-versions\");\n\ninterface Response {\n  status: number;\n  statusText: string;\n  json(): any;\n}\n\nconst endpoint = \"https://api.github.com\";\n\nfunction checkStatus(response: Response) {\n  if (response.status >= 200 && response.status < 300) {\n    return response;\n  } else {\n    throw new Error(response.statusText);\n  }\n}\n\nfunction orderVersions(versions: string[]): string[] {\n  const normalVersions: string[] = [];\n  const nextVersions: string[] = [];\n  versions.forEach((version) => {\n    if (version.match(/^\\d+\\.\\d+\\.\\d+$/) || version.includes(\"-rc.\")) {\n      normalVersions.push(version);\n    } else {\n      nextVersions.push(version);\n    }\n  });\n\n  return [\n    ...normalVersions.sort((a: string, b: string) => -compareVersions(a, b)),\n    ...nextVersions.sort((a: string, b: string) => -compareVersions(a, b)),\n  ];\n}\n\nexport function fetchVersions(repo: string) {\n  // We use github versions\n  return fetch(`${endpoint}/repos/${repo}/tags?per_page=100`)\n    .then(checkStatus)\n    .then((response: Response) => response.json())\n    .then((releases) => releases.filter((r: any) => !r.prerelease))\n    .then((releases) => releases.map((r: any) => r.tag_name))\n    .then((versions) => orderVersions(versions))\n    .catch((err) => {\n      console.warn(err);\n      return [];\n    });\n}\n","interface ProgramMeta {\n  name: string;\n  enabled: boolean;\n  label: string;\n  display: string;\n  users_repo: string;\n}\nexport const Programs: Array<ProgramMeta> = [\n  {\n    name: \"misa-md\",\n    enabled: true,\n    label: \"misa-md\",\n    display: \"MISA-MD\",\n    users_repo: \"misa-md/misa-md\",\n  },\n  {\n    name: \"misa-md-hip\",\n    enabled: true,\n    label: \"misa-md-hip\",\n    display: \"MISA-MD-hip (MISA-MD for GPU/DCU) (beta)\",\n    users_repo: \"misa-md/potential-hip\",\n  },\n  {\n    name: \"misa-md-sunway\",\n    enabled: true,\n    label: \"misa-md-sunway\",\n    display: \"MISA-MD-sunway (MISA-MD for Sunway Taihulight)\",\n    users_repo: \"misa-md/potential-sunway\",\n  },\n];\n","import * as React from \"react\";\nimport { Modal, Button } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport Remarkable from \"remarkable\";\n\nconst md = new Remarkable();\n\ninterface Props {\n  visible: boolean;\n  content: string;\n  onCancel: () => any;\n  onCreate: () => any;\n}\n\nconst PreviewModal: React.FC<Props> = ({\n  visible,\n  content,\n  onCancel,\n  onCreate,\n}) => (\n  <Modal\n    title={\n      <FormattedMessage\n        id=\"previewModal.title\"\n        defaultMessage=\"Issue Preview\"\n      />\n    }\n    cancelText=\"\"\n    width=\"680px\"\n    visible={visible}\n    onCancel={onCancel}\n    footer={\n      <Button onClick={onCreate} type=\"primary\">\n        <FormattedMessage id=\"issue.create\" defaultMessage=\"Create\" />\n      </Button>\n    }\n  >\n    <div\n      className=\"paragraph\"\n      dangerouslySetInnerHTML={{ __html: md.render(content) }}\n    />\n  </Modal>\n);\n\nexport default PreviewModal;\n","import * as React from \"react\";\nimport { Form, Row, Col, Select, Button, Radio, Alert } from \"antd\";\nimport { FormattedMessage } from \"react-intl\";\nimport { BugOutlined } from \"@ant-design/icons\";\nimport NewUsersForm from \"./NewUsersForm\";\nimport createPreview from \"./createPreview\";\nimport useVersions from \"./hooks/useVersions\";\nimport styles from \"./IssueForm.module.scss\";\nimport { Programs } from \"./programs\";\nimport PreviewModal from \"./PreviewModal\";\n\nconst { Option } = Select;\n\nconst params: any = window.location.search\n  .slice(1)\n  .split(\"&\")\n  .reduce((acc, param) => {\n    const [key, value] = param.split(\"=\");\n    return { ...acc, [key]: value };\n  }, {}); // tslint:disable-line\n\nif (!params.repo) {\n  params.repo = \"misa-md\";\n}\n\ninterface IssueFormProps {\n  onIssueTypeChanged: (type: string) => void;\n}\n\nconst IssueForm: React.FC<IssueFormProps> = (props) => {\n  const [form] = Form.useForm();\n\n  const getContent = (type: string) =>\n    createPreview(type, form.getFieldsValue());\n\n  const [content, setContent] = React.useState(\"\");\n  const [preview, setPreview] = React.useState(false);\n  const triggerPreview = (newPreview: boolean) => {\n    setContent(getContent(form.getFieldValue(\"type\")));\n    setPreview(newPreview);\n  };\n\n  const formRef = React.useRef<HTMLDivElement | null>(null);\n  const { repoVersions, fetchVersions } = useVersions();\n\n  const bindModalHandler = React.useCallback(() => {\n    formRef.current!.addEventListener(\"click\", (e: Event) => {\n      if ((e.target as any).getAttribute(\"href\") === \"#repro-modal\") {\n        e.preventDefault();\n      }\n    });\n  }, []);\n\n  // Load form data from localStorage\n  const restoreValues = React.useCallback((omitFields: Array<string> = []) => {\n    const cache = localStorage.getItem(\"form\");\n    if (cache) {\n      const values = JSON.parse(cache);\n      const keys = Object.keys(values);\n\n      // Remove unless fields\n      omitFields.forEach((key) => {\n        delete values[key];\n      });\n\n      if (values.type) {\n        form.setFieldsValue({\n          type: values.type,\n        });\n      }\n\n      // Next frame (IE 9 not support RAF)\n      setTimeout(() => {\n        // Remove useless value\n        const currentValues = form.getFieldsValue();\n        keys.forEach((key) => {\n          if (!(key in currentValues)) {\n            delete values[key];\n          }\n        });\n\n        form.setFieldsValue(values);\n      }, 100);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  const handleTypeChange = React.useCallback(() => {\n    restoreValues([\"type\"]);\n    props.onIssueTypeChanged(form.getFieldValue(\"type\"));\n    // eslint-disable-next-line\n  }, []);\n\n  const handleCreate = React.useCallback(() => {\n    const issueType = form.getFieldValue(\"type\");\n    const title = encodeURIComponent(form.getFieldValue(\"title\")).replace(\n      /%2B/gi,\n      \"+\"\n    );\n    const content = getContent(issueType);\n    const withConfirm = `\n- [ ] I have searched the [issues](https://github.com/misa-md/${repo}/issues) \\\nof this repository and believe that this is not a duplicate.\n\n${content}\n`;\n    const withMarker = `${withConfirm}\\n\\n<!-- generated by misa-md-issue-helper. DO NOT REMOVE -->`;\n    const body = encodeURIComponent(withMarker).replace(/%2B/gi, \"+\");\n    const label =\n      issueType === \"feature\" ? \"&labels=💡%20Feature%20Request\" : \"\";\n\n    localStorage.clear();\n\n    const submittRepo = `misa-md/misa-md-users`;\n    window.open(\n      `https://github.com/${submittRepo}/issues/new?title=${title}&body=${body}${label}`\n    );\n    // eslint-disable-next-line\n  }, []);\n\n  React.useEffect(() => {\n    fetchVersions(\"misa-md/misa-md\"); // todo: (params.repo);\n    bindModalHandler();\n    restoreValues();\n    props.onIssueTypeChanged(form.getFieldValue(\"type\"));\n    // eslint-disable-next-line\n  }, []);\n\n  const onFormChanged = (_: any, values: any) => {\n    let preForm = {};\n    try {\n      preForm = JSON.parse(localStorage.getItem(\"form\") as string) || {};\n    } catch (err) {\n      // Do nothing\n    }\n    const cacheForm: any = {\n      ...preForm,\n    };\n    Object.keys(values).forEach((key) => {\n      if (values[key]) {\n        cacheForm[key] = values[key];\n      }\n    });\n    localStorage.setItem(\"form\", JSON.stringify(cacheForm, null, 2));\n\n    // change issue title:\n    if (form.getFieldValue(\"type\") === \"new_user\") {\n      Object.keys(values).forEach((key) => {\n        if (key === \"new_user_org\") {\n          const org = form.getFieldValue(\"new_user_org\");\n          form.setFieldsValue({\n            title: org ? \"New User from \" + org : \"New User\",\n          });\n        }\n      });\n    }\n  };\n\n  const repo = form.getFieldValue(\"repo\");\n  const versions = repoVersions[repo] || [];\n\n  return (\n    <div ref={formRef}>\n      <Form\n        form={form}\n        layout=\"vertical\"\n        size=\"large\"\n        initialValues={{\n          repo: params.repo,\n          type: \"new_user\",\n          version: versions[0],\n        }}\n        onFinish={() => {\n          triggerPreview(true);\n        }}\n        onValuesChange={onFormChanged}\n      >\n        <PreviewModal\n          visible={preview}\n          content={content}\n          onCancel={() => {\n            triggerPreview(false);\n          }}\n          onCreate={handleCreate}\n        />\n        <Row>\n          <Col span={11}>\n            <Form.Item\n              name=\"repos\"\n              label={\n                <FormattedMessage\n                  id=\"issue.program\"\n                  defaultMessage=\"I am opening an issue for\"\n                />\n              }\n              rules={[{ required: true }]}\n              help={\n                <FormattedMessage\n                  id=\"issue.repoHelp\"\n                  defaultMessage=\"Please make sure to file the issue at appropriate repo.\"\n                />\n              }\n            >\n              <Select mode=\"multiple\">\n                {Programs.map((meta) => {\n                  return (\n                    <Option value={meta.users_repo}>{meta.display}</Option>\n                  );\n                })}\n              </Select>\n            </Form.Item>\n          </Col>\n          <Col span={12} offset={1}>\n            <Form.Item\n              name=\"type\"\n              label={\n                <FormattedMessage id=\"issue.type\" defaultMessage=\"This is a\" />\n              }\n            >\n              <Radio.Group\n                onChange={handleTypeChange}\n                className={styles.radioGroup}\n              >\n                <Radio.Button value=\"bug\" disabled>\n                  <FormattedMessage\n                    id=\"issue.type.bug\"\n                    defaultMessage=\"Bug Report\"\n                  />\n                </Radio.Button>\n                <Radio.Button value=\"feature\" disabled>\n                  <FormattedMessage\n                    id=\"issue.type.feature\"\n                    defaultMessage=\"Feature Request\"\n                  />\n                </Radio.Button>\n                <Radio.Button value=\"new_user\">\n                  <FormattedMessage\n                    id=\"issue.type.new_user\"\n                    defaultMessage=\"New User\"\n                  />\n                </Radio.Button>\n              </Radio.Group>\n            </Form.Item>\n          </Col>\n        </Row>\n\n        <Form.Item\n          noStyle\n          shouldUpdate={(prev, next) => prev.type !== next.type}\n        >\n          {() =>\n            form.getFieldValue(\"type\") === \"feature\" ? (\n              <Alert message=\"Under development\" type=\"warning\" showIcon />\n            ) : form.getFieldValue(\"type\") === \"bug\" ? (\n              <Alert message=\"Under development\" type=\"warning\" showIcon />\n            ) : (\n              <NewUsersForm />\n            )\n          }\n        </Form.Item>\n        <Form.Item>\n          <div className={styles.submitBtn}>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              htmlType=\"submit\"\n              icon={<BugOutlined />}\n            >\n              <FormattedMessage id=\"issue.preview\" defaultMessage=\"Preview\" />\n            </Button>\n          </div>\n        </Form.Item>\n      </Form>\n    </div>\n  );\n};\n\nexport default IssueForm;\n","export default function createPreview(issueType: string, values: any) {\n  if (issueType === \"new_user\") {\n    return createNewUser(values);\n  }\n  return \"\";\n}\n\nfunction createNewUser({\n  repos,\n  new_user_org,\n  new_user_name,\n  new_user_email,\n  new_user_areas_of_interest,\n  new_user_apply_field,\n}: any) {\n  return `\n  ### Institutions or organizations: \n  ${new_user_org}\n  ### Team name or personal preferred name:\n  ${new_user_name}\n  ### Interest or expertise areas:\n  ${new_user_areas_of_interest}\n  ### Program(s) used or will be used:\n  ${repos}\n  ### Will apply this/these program to:\n  ${new_user_apply_field}\\n\\n\n  <!--- email will be hidden: ${new_user_email}-->\n  `;\n}\n","import * as api from \"../api\";\nimport { state } from \"reactive.macro\";\n\nexport default function useVersions() {\n  let repoVersions: { [repo: string]: string[] } = state({});\n\n  const fetchVersions = (repo: string) => {\n    api.fetchVersions(repo).then(\n      (versions: string[]) =>\n        (repoVersions = {\n          ...repoVersions,\n          [repo]: versions,\n        })\n    );\n  };\n\n  return { repoVersions, fetchVersions };\n}\n","import * as React from \"react\";\nimport { useState } from \"react\";\nimport { IntlProvider, addLocaleData } from \"react-intl\";\nimport { Layout, Button } from \"antd\";\nimport NewUserIntro from \"./NewUserIntro\";\nimport IssueForm from \"./IssueForm\";\nimport LocaleContext, { switchLocale } from \"./LocaleContext\";\nimport styles from \"./App.module.scss\";\n\nconst { Header, Content, Footer } = Layout;\n\nconst App: React.FC = () => {\n  const locale = React.useContext(LocaleContext);\n  const [localeString, forceUpdateLocale] = React.useState(locale);\n\n  const appLocale = window.appLocale[localeString];\n  addLocaleData(appLocale.data);\n\n  const [issueType, setIssueType] = useState<string>();\n  const onIssueTypeChanged = (type: string) => {\n    setIssueType(type);\n  };\n\n  return (\n    <LocaleContext.Provider>\n      <Layout className=\"layout\">\n        <Header className={styles.header}>\n          <div className={styles.headerContainer}>\n            <div className={styles.logo}>\n              <img\n                alt=\"logo\"\n                src=\"https://misa-md.github.io/MDoc/img/logo.svg\"\n              />\n              <h1>MISA-MD Issue Helper</h1>\n            </div>\n            <div className={styles.locale}>\n              <Button\n                size=\"small\"\n                onClick={() => switchLocale(forceUpdateLocale)}\n              >\n                {localeString === \"en\" ? \"中文\" : \"English\"}\n              </Button>\n            </div>\n          </div>\n        </Header>\n        <IntlProvider locale={localeString} messages={appLocale.messages}>\n          <Content className={styles.content}>\n            {issueType === \"new_user\" ? <NewUserIntro /> : <> </>}\n            <IssueForm onIssueTypeChanged={onIssueTypeChanged} />\n          </Content>\n        </IntlProvider>\n        <Footer style={{ textAlign: \"center\" }}>\n          Inspired by{\" \"}\n          <a\n            href=\"https://github.com/ant-design/antd-issue-helper\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Ant Design Issue Helper\n          </a>\n          ·{\" \"}\n          <a href=\"https://github.com/misa-md/misa-md-users\">\n            Source Code of This Page\n          </a>\n        </Footer>\n      </Layout>\n    </LocaleContext.Provider>\n  );\n};\n\nexport default App;\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport \"./en-US\";\nimport \"./zh-CN\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\") as HTMLElement);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"App_header__2L3DO\",\"headerContainer\":\"App_headerContainer__3EsT6\",\"logo\":\"App_logo__2qPv-\",\"content\":\"App_content__1Wt3K\"};"],"sourceRoot":""}